{"version":3,"sources":["components/Form.js","components/Search.js","components/Person.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Form","newName","newNumber","nameHandler","numberHandler","personHandler","onSubmit","value","onChange","type","Search","handler","Person","name","number","onClick","Notification","msg","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","search","setSearch","setMsg","useEffect","console","log","personService","initialphonebook","personstoshow","filter","person","toLowerCase","includes","event","target","preventDefault","nameObj","findIndex","returnedPerson","concat","setTimeout","window","confirm","find","p","toLocaleLowerCase","updatedNumber","map","catch","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1919bfc5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({ newName, newNumber, nameHandler, numberHandler, personHandler }) => {\r\n    return (\r\n        <form onSubmit={personHandler}>\r\n            <div>\r\n                name: <input value={newName} onChange={nameHandler} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={numberHandler} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Search = ({value, handler}) => (<input value={value} onChange={handler} />)\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nconst Person = ({ name, number, handler }) => {\r\n    return(\r\n    <li>\r\n        {name + ' ' + number}\r\n        <button onClick={handler}>delete</button>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Notification = ({ msg }) => {\r\n    if (msg === null) {\r\n        return null\r\n    }\r\n    return(\r\n        <div className=\"notif\">\r\n            {msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = 'https://lit-plateau-11831.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport Form from './components/Form'\r\nimport Search from './components/Search'\r\nimport Person from './components/Person'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [search, setSearch] = useState('')\r\n    const [msg, setMsg] = useState(null)\r\n\r\n    useEffect(() => {\r\n        console.log('effect')\r\n        personService\r\n            .getAll()\r\n            .then(initialphonebook => setPersons(initialphonebook))\r\n    }, [])\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleSearch = (event) => {\r\n        setSearch(event.target.value)\r\n    }\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const nameObj = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        const contains = persons.findIndex(person => person.name.toLowerCase() === newName.toLowerCase())\r\n        if (contains === -1) {\r\n            personService\r\n                .create(nameObj)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                    setMsg(`Added ${returnedPerson.name}`)\r\n                    setTimeout(() => {\r\n                        setMsg(null)\r\n                    },5000)\r\n                }\r\n                )\r\n        } else if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n            const person = persons.find(p => p.name.toLowerCase() === newName.toLocaleLowerCase())\r\n            const updatedNumber = { ...person, number: newNumber }\r\n            personService\r\n                .update(person.id, updatedNumber)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.map(p => p.name.toLowerCase() !== newName.toLowerCase() ? p : returnedPerson))\r\n                    setMsg(`${returnedPerson.name}'s number is updated.`)\r\n                    setTimeout(() => {\r\n                        setMsg(null)\r\n                    },5000)\r\n                })\r\n                .catch(err => {\r\n                    setMsg(`Information of ${newName} has already been removed from server.`)\r\n                    setTimeout(() => {\r\n                        setMsg(null)\r\n                    },5000)\r\n                })\r\n        }\r\n    }\r\n\r\n    const deleteNumber = (id, name) => {\r\n        if (window.confirm(`Delete ${name}?`)) {\r\n            personService\r\n                .remove(id)\r\n                setPersons(persons.filter(p => p.id !== id))\r\n                setMsg(`${name} deleted.`)\r\n                setTimeout(() => {\r\n                    setMsg(null)\r\n                },5000)\r\n        }\r\n    }\r\n\r\n\r\n    const personstoshow = persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification msg = {msg} />\r\n            <h3>Search</h3>\r\n            <Search value={search} handler={handleSearch} />\r\n            <Form newName={newName} newNumber={newNumber}\r\n                nameHandler={handleNameChange} numberHandler={handleNumberChange}\r\n                personHandler={addPerson} />\r\n            <h2>Numbers</h2>\r\n            <ul>\r\n                {personstoshow.map(person => <Person key={person.name} name={person.name} number={person.number} handler={() => deleteNumber(person.id, person.name)} />\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}