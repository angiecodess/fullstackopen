{"version":3,"sources":["components/Note.js","components/Notification.js","services/note.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","Notification","msg","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errMsg","setErrMsg","useEffect","noteService","initialnote","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","err","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObj","length","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAC3B,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,QCK3BI,EAXM,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACtB,OAAY,OAARA,EACO,KAGP,qBAAKC,UAAY,QAAjB,SACKD,K,gBCNLE,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCXrCK,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GAuFSC,EAlFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIYN,mBAAS,MAJrB,mBAITO,EAJS,KAIDC,EAJC,KAMhBC,qBAAU,WACRC,IAEGvB,MAAK,SAAAwB,GACJT,EAASS,QAEZ,IAEH,IAyCMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aAE9B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcI,IAAOyB,IACrB,8BACE,yBAAQ3B,QAAS,kBAAM0B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAACvC,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAxD/B,SAAAgB,GACzB,IAAMjB,EAAO0B,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAExB,KAAOA,KAChCyB,EAAW,2BAAQ1C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDgC,EACUlB,EAAIyB,GACX9B,MAAK,SAAA+B,GACJhB,EAASD,EAAMa,KAAI,SAAAvC,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAO2C,SAEpDC,OAAM,SAAAC,GACLZ,EAAU,SAAD,OACEjC,EAAKI,QADP,uCAGT0C,YAAW,WACTb,EAAU,QACV,KACFN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAEA,EAAExB,KAAOA,SAwCwB8B,CAAmB/C,EAAKiB,MAArEjB,EAAKiB,SAGpB,uBAAM+B,SAtCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAU,CACdlC,GAAIS,EAAM0B,OAAS,EACnBhD,QAASwB,EACTyB,MAAM,IAAIC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAE7BtB,EACQgB,GACPvC,MAAK,SAAA+B,GACJhB,EAASD,EAAMgC,OAAOf,IACtBd,EAAW,QA0BX,UACE,uBAAO8B,MAAO/B,EAASgC,SAvBJ,SAACX,GACxBpB,EAAWoB,EAAMY,OAAOF,UAuBpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC3FNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.abb0dd84.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n  return (\r\n    <li>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({ msg }) => {\r\n  if (msg === null){\r\n      return null\r\n  }\r\n  return (\r\n      <div className = \"error\">\r\n          {msg}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/note'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('a new note ..')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errMsg, setErrMsg] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n    .getAll()\r\n      .then(initialnote => {\r\n        setNotes(initialnote)\r\n      })\r\n  }, [])\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(err => {\r\n        setErrMsg(\r\n          `Note '${note.content}' was already removed from server.`\r\n        )\r\n        setTimeout(()=>{\r\n          setErrMsg(null)\r\n        },5000)\r\n        setNotes(notes.filter(n=>n.id !== id))\r\n        })\r\n  }\r\n\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObj = {\r\n      id: notes.length + 1,\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n    noteService\r\n    .create(noteObj)\r\n    .then(returnedNote => {\r\n      setNotes(notes.concat(returnedNote))\r\n      setNewNote('')\r\n    })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification msg = {errMsg}/>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) =>\r\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}